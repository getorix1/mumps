#!/bin/bash

# June 10, 2020

# This script builds a version of Mumps that uses the native B-tree based
# global array database system in shared mode. This means that multiple instances
# of Mumps can be running at the same time on the same database files by means 
# of cooperative sharing of the database files. Each instance gets a 'time slice'
# of the database files. This mode is slower than single user native database mode
# but faster than native client-server.  the key parameter is:

#	--with-shared.

# This paramter causes configure to build the shared dtatabase software by instantiating
# the define symbol NATIVE_STANDALONE

# Other options here are:

#	--with-hardware-math which causes arithmetic to be done using hardware facilities.
#		Remove this if you want extended precision.
#	--with-cache=9 This is the number of global array cached database blocks. If you
#		are using --with-shared, this pramater should not be large.
#	--with-block=4096 This is the size of the B-tree block. It must be in increments
#		of 1024.
#	--with-slice=10 This is sleep time in milliseconds after a database alarm close.
#	--with-shared Build native database in shared mode.
#	--with-alarm=1 Database exclusive time slice

if [ "$OSTYPE" != "cygwin" ]; then

	if [ `whoami` != "root" ]; then
        	echo "**** you must be root to run this script"
        	exit
        	fi
else
	rm -f /usr/bin/mumps2c
	rm -f /usr/bin/mumps
fi

echo "Building Mumps with Globals Resident in a Shared Native Btree"
echo

./configure prefix=/usr \
--with-hardware-math \
--with-cache=5 \
--with-slice=10 \
--with-alarm=1 \
--with-shared \
--with-block=4096 

if (($? > 0))
	then
	echo "Configure error"
	exit
	fi

# number of concurrent 'make' jobs

JOBS=4

make -j $JOBS && make install
